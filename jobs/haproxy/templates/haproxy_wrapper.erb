#!/bin/bash
#

set -e

PATH=/var/vcap/packages/haproxy/bin:${PATH}
DAEMON=/var/vcap/packages/haproxy/bin/haproxy
CONFIG=/var/vcap/jobs/haproxy/config/haproxy.config
PID_FILE=/var/vcap/sys/run/haproxy/haproxy.pid
SOCK_FILE=/var/vcap/sys/run/haproxy/stats.sock
export PATH=$PATH:/var/vcap/packages/ttar/bin

cleanup_daemon() {
  if [ -f ${PID_FILE} ]; then
    pkill -F ${PID_FILE} || true
  fi
  rm -f /var/vcap/sys/run/haproxy/*
}

reload_daemon() {
    update_certs
    echo "$(date): Reloading HAProxy"
    "${DAEMON}" -f "${CONFIG}" -D -p ${PID_FILE} -sf "$(cat ${PID_FILE})" -x ${SOCK_FILE} 0<&-
    sleep infinity
}

update_certs() {
  # reconstitute certs based on ttar file
  mkdir -p /var/vcap/jobs/haproxy/config/ssl
  ttar < /var/vcap/jobs/haproxy/config/certs.ttar

  <%- if p("ha_proxy.ext_crt_list") == true -%>
  # wait for optional external certs
  local ext_crt_list_file=<%= p("ha_proxy.ext_crt_list_file") %>
  local timeout=<%= p("ha_proxy.ext_crt_list_timeout") %>
  local policy=<%= p("ha_proxy.ext_crt_list_policy") %>
  <%- if not ["fail", "continue"].include?(p("ha_proxy.ext_crt_list_policy"))
       abort("ha_proxy.ext_crt_list_policy must be either 'fail' or 'continue'")
      end -%>
  mkdir -p $(dirname $ext_crt_list_file)
  chmod o+rwx $(dirname $ext_crt_list_file)
  local max_retries=$timeout
  local retries=1
  while [ ! -f $ext_crt_list_file ]; do
    echo "$(date): $ext_crt_list_file missing ($retries/$max_retries). waiting..."
    sleep 1
    retries=$((retries + 1))
    if [ $retries -gt $max_retries ]; then
      if [ $policy == "fail" ]; then
        echo "$(date): ERROR: $ext_crt_list_file still missing after $max_retries seconds. Exiting."
        cleanup_daemon
        exit 1
      fi
      if [ $policy == "continue" ]; then
        echo "$(date): WARNING: $ext_crt_list_file still missing after $max_retries seconds. Continuing without external certificates."
        break
      fi
    fi
  done
  if [ -f $ext_crt_list_file ]; then
    echo "$(date): $ext_crt_list_file found."
  fi

  # merge optional external certs
  if grep -q OPTIONAL_EXT_CERTS /var/vcap/jobs/haproxy/config/ssl/crt-list; then
    sed -i -e '/OPTIONAL_EXT_CERTS/r <%= p("ha_proxy.ext_crt_list_file") %>' /var/vcap/jobs/haproxy/config/ssl/crt-list
  fi
  <%- end -%>
}

# unpack base certs and add optional external certs
update_certs

# reconstitute cidrs based on ttar file
mkdir -p /var/vcap/jobs/haproxy/config/cidrs
ttar < /var/vcap/jobs/haproxy/config/cidrs.ttar

#clean up leftovers from previous run
cleanup_daemon

# ensure we shut down the daemonized process correctly on exit
trap shutdown QUIT INT TERM EXIT

# enable hitless reloads
trap reload_daemon USR2

# Start up
echo "$(date): Starting HAProxy"
<%- if p("ha_proxy.nbproc") == 1 -%>
"${DAEMON}" -f "${CONFIG}" -p ${PID_FILE} -V -db
<%- else -%>
"${DAEMON}" -f "${CONFIG}" -D -p ${PID_FILE} 0<&-

# Since HAProxy requires Daemonized mode for its `nbproc` multi-process feature
# to work properly, and BPM requires the process to stay running, sleep infinitely here
sleep infinity
<%- end -%>
